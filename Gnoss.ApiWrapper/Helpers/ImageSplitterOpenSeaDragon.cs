using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using Microsoft.DeepZoomTools;
using Gnoss.ApiWrapper.Log;

namespace Gnoss.ApiWrapper.Helpers
{
    /// <summary>
    /// Class with methods to use OpenSeaDragon library
    /// </summary>
    public class ImageSplitterOpenSeaDragon 
    {
        /// <summary>
        /// Split an image using openseadragon library
        ///  
        /// </summary>
        /// <param name="imagePath">
        /// Image path
        /// </param>
        /// <param name="saveFolder">
        /// Path to save the images and folders produced during the proccess
        /// </param>

        public void SplitImage( string imagePath, string saveFolder)
        {
            SparseImageCreator sparseImageCreator = new SparseImageCreator();
            Microsoft.DeepZoomTools.Image image = new Microsoft.DeepZoomTools.Image(imagePath);
            List<Microsoft.DeepZoomTools.Image> images = new List<Microsoft.DeepZoomTools.Image>();
            images.Add(image);
            sparseImageCreator.Create(images, saveFolder);          
        }

        /// <summary>
        /// Gets a dictionary with the structure of the folders generated by the library
        /// </summary>
        /// <param name="resultImagesPath">Path where the image has been splitted
        /// </param>
        /// <returns>Gets a dictionary with keys are the complete path of each image and values are path to the image </returns>
        public Dictionary<string, string> GetImagesAndFoldersDictionary(string resultImagesPath)
        {
            Dictionary<string, string> imagesStructure = new Dictionary<string, string>();
            try
            {
                DirectoryInfo directory = new DirectoryInfo(resultImagesPath);
                DirectoryInfo[] directories = directory.GetDirectories();

                foreach (DirectoryInfo directorio in directories)
                {
                    foreach (FileInfo file in directorio.GetFiles())
                    {
                        imagesStructure.Add(file.FullName, file.FullName.Substring(file.DirectoryName.LastIndexOf('\\') + 1));   
                    }                

                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.ToString());
            }
            return imagesStructure;
        }

        /// <summary>
        /// Split a folder with images using openseadragon library and returns a dictionary with the structure of the folders generated by the library
        /// </summary>
        /// <param name="folderWithImages">Folder with images to be splitted</param>
        /// <param name="splitedImageFolder">Folder where the result image are going to be generated</param>
        /// <returns></returns>
        public Dictionary<string, string> ImagenesGrandesZoom(string folderWithImages, string splitedImageFolder) 
        {
            Dictionary<string, string> imagesStructure = new Dictionary<string, string>();
            List<string> imageNames = new List<string>();
            try
            {                
                DirectoryInfo oDirectorio = new DirectoryInfo(folderWithImages);
                foreach (FileInfo file in oDirectorio.GetFiles())
                {
                    Log4csharp.Instancia.Debug("Split image: " + file);
                    SplitImage(file.FullName, splitedImageFolder);
                    imageNames.Add(file.Name.Replace(file.Extension,""));
                    
                }
                foreach (string nombre in imageNames)
                {
                    imagesStructure = imagesStructure.Concat(GetImagesAndFoldersDictionary(nombre)).ToDictionary(e => e.Key, e => e.Value);
                }
            }
            catch (Exception ex)
            {
                Log4csharp.Instancia.Error(ex.Message );
            }
            return imagesStructure;
        }

        /// <summary>
        /// Remove all files generated by the OpenSeaDragon library
        /// </summary>
        /// <param name="image"></param>
        /// <param name="splittedImageFolder">Directorio donde están las imágenes</param>
        /// <returns></returns>
        public void BorrarImagenesGeneradasSeadragon(string image, string splittedImageFolder)
        {
            if (Directory.Exists(splittedImageFolder))
            {
                Directory.Delete(splittedImageFolder, true);
                Log4csharp.Instancia.Debug("All the images and folders has been removed from " + splittedImageFolder);
                string xmlPath = string.Concat(splittedImageFolder.Remove(splittedImageFolder.LastIndexOf('\\')), string.Concat("\\", string.Concat(image, ".xml")));
                if (File.Exists(xmlPath))
                {
                    File.Delete(xmlPath);
                }
            }
            else
            {
                Log4csharp.Instancia.Error(string.Format("Couldn'd remove files, the folder {0} hasn't exists ", splittedImageFolder));
            }
            
        }

        
    }
}
